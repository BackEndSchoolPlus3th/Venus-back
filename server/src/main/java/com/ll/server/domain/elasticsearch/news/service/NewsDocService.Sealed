package com.ll.server.domain.elasticsearch.news.service;

import com.ll.server.domain.elasticsearch.news.repository.NewsDocRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class NewsDocService {
    private final NewsDocRepository repository;

    public List<NewsDTO> search(String keyword, boolean hasTitle, boolean hasContent, boolean hasPublisher, String category,Pageable page){
        ElasticsearchClient client = new ElasticSearchClientConfig().createElasticsearchClient();
        BoolQuery.Builder bqBuilder=new BoolQuery.Builder();

        if(hasTitle){
            bqBuilder.should(s->s.match(m->m.field("title").query(keyword)));
        }

        if(hasContent){
            bqBuilder.should(s->s.match(m->m.field("content").query(keyword)));
        }

        if(hasPublisher){
            bqBuilder.should(s->s.match(m->m.field("publisher").query(keyword)));
        }

        if(!category.isBlank()){
            bqBuilder.must(s->s.match(m->m.field("category").query(category)));
        }

        SearchResponse<NewsDoc> result= client.search(
                SearchRequest.of(
                        s->s.index("news")
                                .from(page.getOffset())
                                .size(page.getSize())
                                .query(
                                        q->q.bool(bqBuilder.build())
                                )
                ),NewsDoc.class
        );

        //NewsDTO 빌더로 하나하나 다 넣음
    }

}
